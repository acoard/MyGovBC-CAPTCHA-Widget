{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///../src/captcha.component.ts","webpack:///../src/captcha.data.service.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 404;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 404\n// module chunks = 2","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { environment } from './environments/environment';\r\nimport { AppModule } from './app/app.module';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule, [ HttpModule ]);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import {Component, ElementRef, ViewChild, \r\n  ChangeDetectorRef, Output, Input, AfterViewInit, EventEmitter} from '@angular/core';\r\nimport {DataService} from './captcha.data.service';\r\nimport { Response } from '@angular/http';\r\n\r\n@Component({\r\n  selector: 'captcha',\r\n  template: `\r\n<div>\r\n  <form style=\"clear:both\">\r\n    <div [ngClass]=\"{'has-error': !!incorrectAnswer}\">\r\n      <div>\r\n        \r\n        <div class=\"spinner-box\" *ngIf=\"!state || state === 1\">\r\n          <i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\" aria-hidden=\"true\"></i>\r\n        </div>\r\n        \r\n        <div [ngClass]=\"{'captcha-box-visible': state === 2, 'captcha-box-invisible': state !== 2}\">\r\n          <div>\r\n            <div style=\"float: left;\" #image class=\"captcha-image\"></div>\r\n            <audio #audioElement *ngIf=\"audio && audio.length > 0\" id=\"audioElement\" [src]=\"audio\">\r\n              Your browser does not support the audio element.\r\n            </audio>\r\n            <p style=\"float: left;\">\r\n              <a class=\"try-another-image\" href=\"javascript:void(0)\" (click)=\"playAudio()\" role=\"button\">\r\n                <i class=\"fa fa-play-circle-o\" aria-hidden=\"true\" role=\"alert\"></i> Play Audio\r\n              </a><br>\r\n              <a class=\"try-another-image\" href=\"javascript:void(0)\" (click)=\"retryFetchCaptcha()\" role=\"button\">\r\n                <i class=\"fa fa-refresh\" aria-hidden=\"true\"></i> Try another image\r\n              </a>\r\n            </p>\r\n          </div>\r\n          <div style=\"clear:both;\"></div>\r\n          <div>\r\n            <label for=\"answer\">Enter the text you either see in the orange box or you hear in the audio</label>\r\n            <div class=\"user-input\">\r\n              <input \r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"answer\"\r\n                [(ngModel)]=\"answer\"\r\n                (input)=\"answerChanged($event)\"\r\n                name=\"answer\"\r\n                maxlength=\"6\"\r\n                required\r\n                autocorrect=\"off\" \r\n                autocapitalize=\"none\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"error-captcha\" *ngIf=\"state === 3\" role=\"alert\" aria-live=\"assertive\">\r\n          <i class=\"fa fa-exclamation-triangle fa-2x\" aria-hidden=\"true\"></i>\r\n          <span> Error happened while retreiving image. please \r\n            <a href=\"javascript:void(0)\" (click)=\"retryFetchCaptcha()\">click here</a> \r\n              to try again\r\n          </span>\r\n          <p>\r\n            {{errorFetchingImg}}\r\n          </p>\r\n        </div>\r\n        \r\n        <div class=\"spinner-box\" *ngIf=\"state == 4\" role=\"alert\" aria-live=\"assertive\">\r\n          <i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>\r\n          <span>Verifying your answer...</span>\r\n        </div>\r\n        <div class=\"error-captcha\" *ngIf=\"state === 6\"  role=\"alert\" aria-live=\"assertive\">\r\n          <i class=\"fa fa-exclamation-triangle fa-2x\" aria-hidden=\"true\"></i>\r\n          <span> Error happened while verifying your answer. please \r\n            <a href=\"javascript:void(0)\" (click)=\"retryFetchCaptcha()\">click here</a> \r\n              to try again\r\n          </span>\r\n          <p>\r\n          </p>\r\n        </div>\r\n        \r\n        <div class=\"text-danger\" *ngIf=\"incorrectAnswer === true\" role=\"alert\" aria-live=\"assertive\">\r\n          Incorrect answer, plese try again.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n  <div class=\"confirm-correct-answer\" *ngIf=\"state === 5\" role=\"alert\" aria-live=\"assertive\">\r\n    <i class=\"fa fa-check success fa-2x\" aria-hidden=\"true\"></i> \r\n    Correct. You can submit your application now.\r\n  </div>\r\n</div>\r\n  \r\n  `,\r\n  styles: [`\r\n    .confirm-correct-answer {\r\n      display:block;\r\n      \r\n    }\r\n    .confirm-correct-answer i {\r\n      color: green;\r\n    }\r\n    .spinner-box {\r\n      height: 60px;\r\n      margin: 6px 10px 6px 10px;\r\n    }\r\n\r\n    .error-captcha {\r\n      margin-left: 10px;\r\n    }\r\n    .error-captcha i {\r\n      color: darkorange;\r\n    }\r\n    .error-captcha p{\r\n      margin-left: 32px;\r\n    }\r\n\r\n    .user-input {\r\n      width: 300px;\r\n    }\r\n\r\n    .captcha-box-visible {\r\n      display: block\r\n    }\r\n\r\n    .captcha-box-invisible{\r\n      display: none\r\n    }  \r\n\r\n    .image-box {\r\n      position:relative\r\n    }\r\n\r\n    .captcha-image {\r\n      display: inline-block;\r\n      border: 1px solid darkorange;\r\n    }\r\n    .try-another-image {\r\n      vertical-align:text-top;\r\n      display: inline-block;\r\n      margin-left: 5px;\r\n    }\r\n\r\n\r\n  `],\r\n  providers: [DataService]\r\n})\r\nexport class CaptchaComponent implements AfterViewInit {\r\n  @ViewChild('image') imageContainer: ElementRef;\r\n  @ViewChild('audioElement') audioElement: ElementRef;\r\n  @Input('apiBaseUrl') apiBaseUrl: string;\r\n  @Input('nonce') nonce: string;\r\n  @Output() onValidToken = new EventEmitter<string>();\r\n\r\n\r\n  userAnswerCorrect: boolean = null;\r\n  /**\r\n   * Http error response for fetching a CAPTCHA image.\r\n   */\r\n  errorFetchingImg = null;\r\n\r\n  /**\r\n   * Http error response for verifying user's answer.\r\n   */\r\n  errorVerifyAnswer = null;\r\n\r\n  private validation = \"\";\r\n  private audio = \"\";\r\n  private answer = \"\";\r\n\r\n  state:CAPTCHA_STATE;\r\n  incorrectAnswer:boolean;\r\n\r\n\r\n  constructor(private dataService: DataService,\r\n    private cd: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.getNewCaptcha(false);\r\n\r\n    // this.getNewCaptcha(false);\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  answerChanged (event:any) {\r\n    if(this.answer.length < 6){\r\n      this.incorrectAnswer = null;\r\n    }\r\n    if (this.answer.length === 6) {\r\n      this.state = CAPTCHA_STATE.VERIFYING_ANSWER;\r\n      this.incorrectAnswer = null;\r\n      this.dataService.verifyCaptcha(this.apiBaseUrl, this.nonce, this.answer, this.validation).subscribe(\r\n        (res:Response) => {\r\n          let payload = res.json();\r\n          if( this.isValidPayload(payload)){\r\n            this.handleVerify(payload);\r\n          }else{\r\n            this.state = CAPTCHA_STATE.ERROR_VERIFY;\r\n            this.errorVerifyAnswer = this.createErrorTextLine(res);\r\n          }\r\n        },\r\n        (error:Response) => {\r\n          this.state = CAPTCHA_STATE.ERROR_VERIFY;\r\n          this.errorVerifyAnswer = this.createErrorTextLine(error);\r\n          console.log('Error response from verifying user answer: %o', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // Call the backend to see if our answer is correct\r\n  private handleVerify(payload:any) {\r\n    //There could be the rare change where an invalid payload response is received.\r\n    if (payload.valid === true) {\r\n      this.state = CAPTCHA_STATE.SUCCESS_VERIFY_ANSWER_CORRECT;\r\n      this.onValidToken.emit(payload.jwt);\r\n    } else {\r\n      this.incorrectAnswer = true;\r\n      this.answer = \"\";\r\n      this.audio = \"\";\r\n      // They failed - try a new one.\r\n      this.getNewCaptcha(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Case where HTTP 200 response code is received by the payload is incorrect or corrupt.\r\n   * The occurance of this type of case should be rare.\r\n   * @param payload \r\n   */\r\n  private isValidPayload(payload){\r\n    console.debug('Response payload: %o', payload);\r\n    if(!payload){\r\n      console.error(\"payload cannot be null or undefined or 0\");\r\n      return false;\r\n    }else{\r\n      let hasValueProp = payload.hasOwnProperty('valid');\r\n      if(!hasValueProp){\r\n        console.error('payload must have its own property named \\'valid\\'');\r\n        return false;\r\n      }else{\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  public retryFetchCaptcha() {\r\n    this.state = undefined;\r\n\r\n    /**\r\n     * wait for 0.5 seond before resubmitting\r\n     */\r\n    setTimeout(() => {\r\n      this.getNewCaptcha(false)\r\n    }, 200);\r\n  }\r\n\r\n  public playAudio() {\r\n    if (this.audio && this.audio.length > 0) {\r\n       this.audioElement.nativeElement.play();\r\n    }\r\n    else {\r\n      this.dataService.fetchAudio(this.apiBaseUrl, this.validation).subscribe(\r\n        (response: Response) => {\r\n\r\n          let payload = response.json();\r\n          this.audio = payload.audio;\r\n          this.cd.detectChanges();\r\n          this.audioElement.nativeElement.play();\r\n        },\r\n        (error: Response) => {\r\n          console.log('Error response from fetching audio CAPTCHA: %o', error);\r\n          this.cd.detectChanges();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public getNewCaptcha(errorCase:any) {\r\n    console.log(\"Fetching new captcha image.\");\r\n    this.state = CAPTCHA_STATE.FETCHING_CAPTCHA_IMG;\r\n    this.audio = \"\";\r\n\r\n    // Reset things\r\n    if (!errorCase) {\r\n      // Let them know they failed instead of wiping out the answer area\r\n      // Contructing this form on page load/reload will have errorCase = false\r\n      this.userAnswerCorrect = null;\r\n    }\r\n\r\n    this.dataService.fetchData(this.apiBaseUrl, this.nonce).subscribe(\r\n      (response:Response) => {\r\n        this.state = CAPTCHA_STATE.SUCCESS_FETCH_IMG;\r\n\r\n        let payload = response.json();\r\n        this.imageContainer.nativeElement.innerHTML = payload.captcha;\r\n        this.validation = payload.validation;\r\n        this.cd.detectChanges();\r\n      },\r\n      (error:Response) => {\r\n        this.state = CAPTCHA_STATE.ERROR_FETCH_IMG;\r\n        this.incorrectAnswer = null;\r\n        this.errorFetchingImg = this.createErrorTextLine(error);\r\n        console.log('Error esponse from fetching CAPTCHA text: %o', error);\r\n        this.cd.detectChanges();\r\n      }\r\n    );\r\n  }\r\n\r\n  private createErrorTextLine(error:Response){\r\n\r\n    let line = 'Error status: ' + error.status;\r\n    if(error.statusText){\r\n      line = line + ', status text ' + error.statusText;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 7 mutually exclusive states, the program can only be in one of these state\r\n * at any given point..\r\n */\r\nenum CAPTCHA_STATE {\r\n  FETCHING_CAPTCHA_IMG = 1,\r\n  SUCCESS_FETCH_IMG = 2,\r\n  ERROR_FETCH_IMG = 3,\r\n  VERIFYING_ANSWER = 4,\r\n  SUCCESS_VERIFY_ANSWER_CORRECT = 5,\r\n  //http error during verification call.\r\n  ERROR_VERIFY = 6,\r\n  // SUCCESS_VERIFY_ANSWER_INCORRECT = 6,\r\n}\n\n\n// WEBPACK FOOTER //\n// ../src/captcha.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport {Observable} from \"rxjs\";\r\nimport 'rxjs/Rx';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  fetchData(apiBaseUrl:string, nonce:string):Observable<Response> {\r\n  \treturn this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {})\r\n  }\r\n\r\n  verifyCaptcha(apiBaseUrl:string, nonce:string, answer:string, encryptedAnswer:string):Observable<Response> {\r\n    return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\r\n  }\r\n\r\n  fetchAudio(apiBaseUrl:string, validation:string):Observable<Response> {\r\n    return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {})\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/captcha.data.service.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.css'],\r\n\r\n})\r\n\r\nexport class AppComponent {\r\n  title = 'MyGovBC Captcha Widget Test Harness';\r\n  api = \"https://mygovbc-captcha-service-demo.pathfinder.gov.bc.ca\";\r\n  // api = \"http://localhost:8000/msp/api/captcha-local/captcha\";\r\n  token:string;\r\n\r\n  validToken (event: string) {\r\n    console.log('valid token received: %s' + event);\r\n    this.token = event;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AppComponent } from './app.component';\r\nimport {CaptchaComponent} from \"../../../src/captcha.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CaptchaComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \".container {\\r\\n\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 674\n// module chunks = 2","module.exports = \"<html>\\r\\n\\r\\n<body>\\r\\n  <div class=\\\"container\\\">\\r\\n\\r\\n    <header>\\r\\n      <h1>\\r\\n        {{title}}\\r\\n\\r\\n      </h1>\\r\\n    </header>\\r\\n\\r\\n    <captcha [apiBaseUrl]=\\\"api\\\" [nonce]=\\\"23423234234\\\" (onValidToken)=\\\"validToken($event)\\\"></captcha>\\r\\n    <hr>\\r\\n    <section *ngIf=\\\"token\\\">\\r\\n      <h2>After solving, the captcha this token is used to send to the API: </h2>\\r\\n      <code>{{token}}</code><br><br>\\r\\n      <strong>Try decoding and verifying (requires secret) it at: <a href=\\\"https://jwt.io/\\\" target=\\\"_blank\\\">jwt.io</a></strong>\\r\\n    </section>\\r\\n  </div>\\r\\n</body>\\r\\n\\r\\n</html>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 675\n// module chunks = 2"],"sourceRoot":""}